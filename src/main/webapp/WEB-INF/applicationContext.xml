<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


<!--     <context:component-scan base-package="org.auscope" />
 -->

    <tx:annotation-driven />
    <context:annotation-config />

    <jpa:repositories base-package="org.auscope" />

    <!-- Turn on HostPrecedingPropertyPlaceholderConfigurer -->
    <!-- http://jdwyah.blogspot.com/2006/12/updated-spring-configuration.html -->
    <bean id="propertyConfigurer" class="org.auscope.portal.core.server.PortalPropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
                <!--  Spring SpEL magic - use context parameter or the default war env.properties -->
                <value>#{contextParameters['envPropertiesLocation'] ?: 'classpath:env.properties'}</value>
            </list>
        </property>
    </bean>

    <cache:annotation-driven />

    <!-- This is the core threadpool shared by object instances throughout the portal -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="5" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="httpServiceCaller" class="org.auscope.portal.core.server.http.HttpServiceCaller">
        <constructor-arg type="int" name="connectionTimeOut">
            <value>900000</value>
        </constructor-arg>
    </bean>

    <bean id="opendapService" class="org.auscope.portal.core.services.OpendapService" >
        <constructor-arg name="serviceCaller" ref="httpServiceCaller"/>
        <constructor-arg name="getDataMethodMaker">
            <bean class="org.auscope.portal.core.services.methodmakers.OPeNDAPGetDataMethodMaker">
            </bean>
        </constructor-arg>
    </bean>

    <bean id="viewCswRecordFactory" class="org.auscope.portal.core.view.ViewCSWRecordFactory">
    </bean>

    <bean id="viewKnownLayerFactory" class="org.auscope.portal.core.view.ViewKnownLayerFactory">
    </bean>

    <bean id="wcsService" class="org.auscope.portal.core.services.WCSService">
        <constructor-arg name="serviceCaller" ref="httpServiceCaller"/>
        <constructor-arg name="methodMaker">
            <bean class="org.auscope.portal.core.services.methodmakers.WCSMethodMaker">
            </bean>
        </constructor-arg>
    </bean>

    <bean id="wfsMethodMaker" class="org.auscope.portal.core.services.methodmakers.WFSGetFeatureMethodMaker">
        <property name="namespaces">
            <bean class="org.auscope.portal.core.services.namespaces.ErmlNamespaceContext"/>
        </property>
    </bean>

    <bean id="gmlToHtml" class="org.auscope.portal.core.xslt.GmlToHtml">
    </bean>

    <bean id="wfsService" class="org.auscope.portal.core.services.WFSService" lazy-init = "true">
        <constructor-arg name="httpServiceCaller" ref="httpServiceCaller"/>
        <constructor-arg name="wfsMethodMaker">
            <bean class="org.auscope.portal.core.services.methodmakers.WFSGetFeatureMethodMaker">
            </bean>
        </constructor-arg>
        <constructor-arg name="gmlToHtml">
            <bean class="org.auscope.portal.core.xslt.GmlToHtml">
            </bean>
        </constructor-arg>
    </bean>

    <bean id="cswKnownLayerService" class="org.auscope.portal.core.services.KnownLayerService">
        <constructor-arg name="knownTypes" ref="knownTypes"/> <!-- This is pulled from the profile xml -->
        <constructor-arg name="cswCacheService" ref="cswCacheService"/>
    </bean>

    <bean id="cswCacheService" class="org.auscope.portal.core.services.CSWCacheService">
        <constructor-arg name="executor" ref="taskExecutor"/>
        <constructor-arg name="serviceCaller" ref="httpServiceCaller"/>
        <constructor-arg name="cswServiceList" ref="cswServiceList"/> <!-- This is pulled from the profile xml -->
        <constructor-arg name="transformerFactory">
            <bean class="org.auscope.portal.core.services.responses.csw.CSWRecordTransformerFactory"/>
        </constructor-arg>
        <property name="forceGetMethods" value="true"/>
    </bean>

    <bean id="cswFilterService" class="org.auscope.portal.core.services.CSWFilterService">
        <constructor-arg name="executor" ref="taskExecutor"/>
        <constructor-arg name="serviceCaller" ref="httpServiceCaller"/>
        <constructor-arg name="cswServiceList" ref="cswServiceList"/> <!-- This is pulled from the profile xml -->
        <constructor-arg name="transformerFactory">
            <bean class="org.auscope.portal.core.services.responses.csw.CSWRecordTransformerFactory"/>
        </constructor-arg>
    </bean>

     <bean id="service-configuration" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="cswRegVeglProduction" />
            </list>
        </constructor-arg>
    </bean>  

    <bean id="NSWERML2_WFSTest" class="org.auscope.portal.core.configuration.ServiceConfigurationItem">
        <constructor-arg name="id" value="NSWERML2Test"/>
        <constructor-arg name="url" value="http://aus-test-worker2.arrc.csiro.au:8080/gsnsw-earthresource/wfs"/>
        <constructor-arg name="paging" type="boolean" value="false"/>      
        <constructor-arg name="isGml32" type="boolean" value="true"/>        
    </bean>

    <bean id="service-configuration2" class="org.auscope.portal.core.configuration.ServiceConfiguration">        
        <constructor-arg name="serviceConfigurationItems">
            <list>
               <ref bean="NSWERML2_WFSTest"/>         
            </list>
        </constructor-arg>
    </bean>

    <bean id="cswRegVeglProduction" class="org.auscope.portal.core.services.csw.custom.CustomRegistry">
        <constructor-arg name="id" value="cswRegVeglProduction" />
        <constructor-arg name="title" value="SISS ANU Geonetwork" />
        <constructor-arg name="serviceUrl" value="http://vgl-reg.auscope.org/geonetwork/srv/eng/csw" />
        <constructor-arg name="recordInformationUrl" value="http://vgl-reg.auscope.org/geonetwork/srv/eng/main.home?uuid=%1$s" />
    </bean>

    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cache-manager-ref="ehcache" />

    <bean id="ehcache"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:config-location="ehcache.xml" />

    <bean id="wpsClient"
        class="org.auscope.portal.server.web.service.wps.WpsServiceClient"
        scope="prototype" lazy-init="true" />

    <bean id="fileStagingService"
        class="org.auscope.portal.core.services.cloud.FileStagingService">
        <constructor-arg name="stagingInformation">
            <bean class="org.auscope.portal.core.cloud.StagingInformation">
                <constructor-arg name="stageInDirectory"
                    value="${HOST.localStageInDir}" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>

    <bean id="vmPool" class="org.auscope.portal.server.web.service.wps.VmPool">
        <constructor-arg name="accessKeyNectar"
            value="${env.nectar.ec2.accesskey}" />
        <constructor-arg name="secretKeyNectar"
            value="${env.nectar.ec2.secretkey}" />
        <constructor-arg name="accessKeyAws"
            value="${env.aws.ec2.accesskey}" />
        <constructor-arg name="secretKeyAws"
            value="${env.aws.ec2.secretkey}" />
        <constructor-arg name="executor" ref="executor" />
        <property name="cloudProvider" value="${HOST.cloud}"/>
        <property name="skippedZones">
            <set>
                <value>monash</value>
                <value>monash-test</value>
                <value>monash-01</value>
                <value>monash-02</value>
                <value>melbourne</value>
                <value>melbourne-qh2</value>
                <value>tasmania</value>
                <value>tasmania-s</value>
            </set>
        </property>
        <property name="vmPoolSize" value="2" />
    </bean>

    <bean id="wpsService" class="org.auscope.portal.server.web.service.WpsService">
        <constructor-arg name="vmPool" ref="vmPool" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${HOST.smtp.server}" />
        <property name="username" value="${env.smtp.username}"/>
        <property name="password" value="${env.smtp.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">${HOST.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${HOST.smtp.ttls}</prop>
                <prop key="mail.debug">false</prop>
            </props>
        </property>

    </bean>

    <bean name="emailListener"
        class="org.auscope.portal.server.web.service.jobtask.EmailListener">
        <constructor-arg name="mailSender" ref="mailSender"/>
        <constructor-arg name="velocityEngine">
            <bean
                class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
                <property name="velocityProperties">
                    <value>
                        resource.loader=class
                        class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                    </value>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg name="templateFilePath"
            value="org/auscope/portal/server/web/service/jobtask/task-completion.tpl" />
        <constructor-arg name="templateFileEncoding"
            value="UTF-8" />
        <constructor-arg name="emailSender">
            <value><![CDATA[EAVL Admin <Eavl-support@lists.csiro.au>]]></value>
        </constructor-arg>
    </bean>

    <!-- This is the core threadpool shared by object instances throughout
        the portal -->
    <!-- <bean id="executorFactory" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="5" /> <property name="maxPoolSize" value="5"
        /> <property name="queueCapacity" value="25" /> </bean> <bean id="executor"
        factory-bean="executorFactory" factory-method="getObject"> </bean> -->

    <bean id="executor"
        class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="5" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        p:driverClassName="${HOST.db.driver}"
        p:url="${HOST.db.url}"
        p:username="${env.db.username}"
        p:password="${env.db.password}" />


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" />


    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource">
        <property name="persistenceUnitName" value="eavlPersists" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>

        <property name="packagesToScan">
            <list>
                <value>org.auscope.*</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect
                </prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter">
        <property name="targetDataSource" ref="targetDataSource" /> </bean> <bean
        id="targetDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:/comp/env/jdbc/psql/eavl" /> </bean> -->
</beans>